# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Execute Job
  # You may pin to the exact commit or the version.
  # uses: parasoft/execute-job-action@4ff52dfe0b1abb285d1e94418d9b6015bbb5f6bc
  uses: parasoft/execute-job-action@1.0.0
  with:
    # CTP URL
    ctpUrl: 'http://10.1.40.81:8080/em/ui/systems'
    # CTP Username
    ctpUsername: 'admin'
    # CTP Password
    ctpPassword: 'admin'
    # CTP Test Execution Job Name
    ctpJob: 'CalculatorJob'
    # Abort the job after timeout exceeded
    abortOnTimeout: # optional
    # Timeout value in minutes
    timeoutInMinutes: # optional
    # Publish test execution results to DTP
    publishReport: # 'true'
    # DTP URL
    dtpUrl: # optional
    # DTP Username
    dtpUsername: # 'demo'
    # DTP Password
    dtpPassword: # 'demo-user'
    # DTP Project Name
    dtpProject: # optional
    # Build ID to send to DTP
    buildId: # optional
    # Session Tag to send to DTP
    sessionTag: # 'GitHubTest'
    # Append the test variable set environment name to the session tag
    appendEnvironment: # optional
